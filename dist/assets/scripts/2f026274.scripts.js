(function(){angular.module("htApp",["ui.router","htmlTable","templates-main"]).config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){"use strict";$stateProvider.state("index",{url:"/",views:{"":{templateUrl:"assets/views/main-view.html",controller:"MainViewController as mainViewCtrl"}}});$urlRouterProvider.otherwise("/#")}])})();(function(){angular.module("htmlTable",[])})();angular.module("htApp").constant("routesConfig",function(){"use strict";var rootRoutesConfig={people:"assets/feeds/people.json"};var routesConfig={people:{all:function(){return rootRoutesConfig.people}}};return routesConfig}());(function(){angular.module("htmlTable").factory("htmlTableFactory",["$window",function($window){"use strict";var HtmlTable=function(args){var table={};function _convertTableConfig(args){return{containers:{table:args.tableContainerID,pagination:args.paginationContainerID},data:args.data.records,columns:args.data.columns,renders:args.data.renders,options:{sort:{orderBy:args.data.orderBy-1,ascending:args.data.orderType==="ASC"},pagination:{recordsPerPage:args.data.recordsPerPage,currentPage:args.data.currentPage,maxVisiblePages:3},filter:{text:args.data.searchText}}}}function _buildHtmlTable(){var config=_convertTableConfig(args),containers=config.containers,data=config.data,columns=config.columns,renders=config.renders,options=config.options;table=new window.htmlTableNS.HtmlTable(containers,data,columns,renders,options)}function _initHtmlTable(){_buildHtmlTable()}_initHtmlTable();return table};return HtmlTable}])})();(function(){angular.module("htApp").service("peopleData",["$http","$q","routesConfig",function($http,$q,routesConfig){"use strict";function _getData(){var deferred=$q.defer();$http.get(routesConfig.people.all()).success(function(response){deferred.resolve(response)}).error(function(){deferred.reject()});return deferred.promise}return{getData:_getData}}])})();(function(){angular.module("htmlTable").service("htmltableRenders",[function(){"use strict";function _getRender(name){return renders[name]}var renders={simpleRender:function(data){return data},dateRender:function(data){var date=new Date(data);return date.getDate()+"/"+date.getMonth()+1+"/"+date.getFullYear()},roundFloatRender:function(data){return Math.round(data).toFixed(2)}};return{get:_getRender}}])})();(function(){angular.module("htApp").controller("MainViewController",["$scope","peopleData","htmltableRenders",function($scope,peopleData,htmltableRenders){"use strict";var _this=this,htmlTableConfig={};htmlTableConfig.renders=[htmltableRenders.get("simpleRender"),htmltableRenders.get("simpleRender"),htmltableRenders.get("dateRender"),htmltableRenders.get("roundFloatRender")];htmlTableConfig.data=peopleData.getData();_this.htConfig=htmlTableConfig;$scope.$on("$destroy",function(){_this.htConfig=null})}])})();(function(){angular.module("htmlTable").directive("htmlTable",[function(){"use strict";return{templateUrl:"assets/views/directives/html-table.html",restrict:"A",replace:true,transclude:true,scope:{table:"=htTable",config:"=htConfig"},controller:["$scope","$q","htmlTableFactory",function($scope,$q,HtmlTable){var htmlTable={};function _initTable(data){var config={tableContainerID:"table-container",paginationContainerID:"table-pagination-container",data:data};htmlTable=new HtmlTable(config);$scope.table=htmlTable}$scope.$watch("config",function(configReady){if(configReady){configReady.data.then(function(response){response.renders=configReady.renders;_initTable(response)},function(){console.log("error")})}},true)}],link:function postLink(scope,element,attrs){}}}])})();